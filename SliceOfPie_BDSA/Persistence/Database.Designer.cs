//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "fk_Change_File1", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SliceOfPie_Model.Persistence.File), "Change", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.Change), true)]
[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "fk_Change_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SliceOfPie_Model.Persistence.User), "Change", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.Change), true)]
[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "fk_File_Project1", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SliceOfPie_Model.Persistence.Project), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.File), true)]
[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "fk_FileInstance_File1", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SliceOfPie_Model.Persistence.File), "FileInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.FileInstance), true)]
[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "fk_FileMetaData_File1", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SliceOfPie_Model.Persistence.File), "FileMetaData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.FileMetaData), true)]
[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "fk_FileInstance_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SliceOfPie_Model.Persistence.User), "FileInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.FileInstance), true)]
[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "fk_FileMetaData_MetaDataType1", "MetaDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SliceOfPie_Model.Persistence.MetaDataType), "FileMetaData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.FileMetaData), true)]
[assembly: EdmRelationshipAttribute("SliceOfLifeModel", "ProjectHasUser", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.Project), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie_Model.Persistence.User))]

#endregion

namespace SliceOfPie_Model.Persistence
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Change> Changes
        {
            get
            {
                if ((_Changes == null))
                {
                    _Changes = base.CreateObjectSet<Change>("Changes");
                }
                return _Changes;
            }
        }
        private ObjectSet<Change> _Changes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileInstance> FileInstances
        {
            get
            {
                if ((_FileInstances == null))
                {
                    _FileInstances = base.CreateObjectSet<FileInstance>("FileInstances");
                }
                return _FileInstances;
            }
        }
        private ObjectSet<FileInstance> _FileInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileMetaData> FileMetaDatas
        {
            get
            {
                if ((_FileMetaDatas == null))
                {
                    _FileMetaDatas = base.CreateObjectSet<FileMetaData>("FileMetaDatas");
                }
                return _FileMetaDatas;
            }
        }
        private ObjectSet<FileMetaData> _FileMetaDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaDataType> MetaDataTypes
        {
            get
            {
                if ((_MetaDataTypes == null))
                {
                    _MetaDataTypes = base.CreateObjectSet<MetaDataType>("MetaDataTypes");
                }
                return _MetaDataTypes;
            }
        }
        private ObjectSet<MetaDataType> _MetaDataTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Changes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChanges(Change change)
        {
            base.AddObject("Changes", change);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileInstances(FileInstance fileInstance)
        {
            base.AddObject("FileInstances", fileInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileMetaDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileMetaDatas(FileMetaData fileMetaData)
        {
            base.AddObject("FileMetaDatas", fileMetaData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaDataTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaDataTypes(MetaDataType metaDataType)
        {
            base.AddObject("MetaDataTypes", metaDataType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SliceOfLifeModel", Name="Change")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Change : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Change object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user_email">Initial value of the User_email property.</param>
        /// <param name="file_id">Initial value of the File_id property.</param>
        public static Change CreateChange(global::System.Int64 id, global::System.String user_email, global::System.Int64 file_id)
        {
            Change change = new Change();
            change.id = id;
            change.User_email = user_email;
            change.File_id = file_id;
            return change;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String User_email
        {
            get
            {
                return _User_email;
            }
            set
            {
                if (_User_email != value)
                {
                    OnUser_emailChanging(value);
                    ReportPropertyChanging("User_email");
                    _User_email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("User_email");
                    OnUser_emailChanged();
                }
            }
        }
        private global::System.String _User_email;
        partial void OnUser_emailChanging(global::System.String value);
        partial void OnUser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> timestamp
        {
            get
            {
                return _timestamp;
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private Nullable<global::System.Int64> _timestamp;
        partial void OntimestampChanging(Nullable<global::System.Int64> value);
        partial void OntimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String change1
        {
            get
            {
                return _change1;
            }
            set
            {
                Onchange1Changing(value);
                ReportPropertyChanging("change1");
                _change1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("change1");
                Onchange1Changed();
            }
        }
        private global::System.String _change1;
        partial void Onchange1Changing(global::System.String value);
        partial void Onchange1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 File_id
        {
            get
            {
                return _File_id;
            }
            set
            {
                if (_File_id != value)
                {
                    OnFile_idChanging(value);
                    ReportPropertyChanging("File_id");
                    _File_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("File_id");
                    OnFile_idChanged();
                }
            }
        }
        private global::System.Int64 _File_id;
        partial void OnFile_idChanging(global::System.Int64 value);
        partial void OnFile_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_Change_File1", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_Change_File1", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_Change_File1", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_Change_File1", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("SliceOfLifeModel.fk_Change_File1", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_Change_User1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SliceOfLifeModel.fk_Change_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SliceOfLifeModel.fk_Change_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SliceOfLifeModel.fk_Change_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SliceOfLifeModel.fk_Change_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SliceOfLifeModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="serverpath">Initial value of the serverpath property.</param>
        /// <param name="project_id">Initial value of the Project_id property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static File CreateFile(global::System.Int64 id, global::System.String name, global::System.String serverpath, global::System.Int32 project_id, global::System.Decimal version)
        {
            File file = new File();
            file.id = id;
            file.name = name;
            file.serverpath = serverpath;
            file.Project_id = project_id;
            file.Version = version;
            return file;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String serverpath
        {
            get
            {
                return _serverpath;
            }
            set
            {
                OnserverpathChanging(value);
                ReportPropertyChanging("serverpath");
                _serverpath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("serverpath");
                OnserverpathChanged();
            }
        }
        private global::System.String _serverpath;
        partial void OnserverpathChanging(global::System.String value);
        partial void OnserverpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private Nullable<global::System.Byte> _deleted;
        partial void OndeletedChanging(Nullable<global::System.Byte> value);
        partial void OndeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Project_id
        {
            get
            {
                return _Project_id;
            }
            set
            {
                OnProject_idChanging(value);
                ReportPropertyChanging("Project_id");
                _Project_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Project_id");
                OnProject_idChanged();
            }
        }
        private global::System.Int32 _Project_id;
        partial void OnProject_idChanging(global::System.Int32 value);
        partial void OnProject_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Decimal _Version;
        partial void OnVersionChanging(global::System.Decimal value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_Change_File1", "Change")]
        public EntityCollection<Change> Changes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Change>("SliceOfLifeModel.fk_Change_File1", "Change");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Change>("SliceOfLifeModel.fk_Change_File1", "Change", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_File_Project1", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SliceOfLifeModel.fk_File_Project1", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SliceOfLifeModel.fk_File_Project1", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SliceOfLifeModel.fk_File_Project1", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("SliceOfLifeModel.fk_File_Project1", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileInstance_File1", "FileInstance")]
        public EntityCollection<FileInstance> FileInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileInstance>("SliceOfLifeModel.fk_FileInstance_File1", "FileInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileInstance>("SliceOfLifeModel.fk_FileInstance_File1", "FileInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileMetaData_File1", "FileMetaData")]
        public EntityCollection<FileMetaData> FileMetaDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileMetaData>("SliceOfLifeModel.fk_FileMetaData_File1", "FileMetaData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileMetaData>("SliceOfLifeModel.fk_FileMetaData_File1", "FileMetaData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SliceOfLifeModel", Name="FileInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileInstance object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user_email">Initial value of the User_email property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="file_id">Initial value of the File_id property.</param>
        public static FileInstance CreateFileInstance(global::System.Int64 id, global::System.String user_email, global::System.String path, global::System.Int64 file_id)
        {
            FileInstance fileInstance = new FileInstance();
            fileInstance.id = id;
            fileInstance.User_email = user_email;
            fileInstance.path = path;
            fileInstance.File_id = file_id;
            return fileInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String User_email
        {
            get
            {
                return _User_email;
            }
            set
            {
                if (_User_email != value)
                {
                    OnUser_emailChanging(value);
                    ReportPropertyChanging("User_email");
                    _User_email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("User_email");
                    OnUser_emailChanged();
                }
            }
        }
        private global::System.String _User_email;
        partial void OnUser_emailChanging(global::System.String value);
        partial void OnUser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private Nullable<global::System.Byte> _deleted;
        partial void OndeletedChanging(Nullable<global::System.Byte> value);
        partial void OndeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 File_id
        {
            get
            {
                return _File_id;
            }
            set
            {
                if (_File_id != value)
                {
                    OnFile_idChanging(value);
                    ReportPropertyChanging("File_id");
                    _File_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("File_id");
                    OnFile_idChanged();
                }
            }
        }
        private global::System.Int64 _File_id;
        partial void OnFile_idChanging(global::System.Int64 value);
        partial void OnFile_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileInstance_File1", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_FileInstance_File1", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_FileInstance_File1", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_FileInstance_File1", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("SliceOfLifeModel.fk_FileInstance_File1", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileInstance_User1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SliceOfLifeModel.fk_FileInstance_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SliceOfLifeModel.fk_FileInstance_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SliceOfLifeModel.fk_FileInstance_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SliceOfLifeModel.fk_FileInstance_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SliceOfLifeModel", Name="FileMetaData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileMetaData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileMetaData object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="metaDataType_Type">Initial value of the MetaDataType_Type property.</param>
        /// <param name="file_id">Initial value of the File_id property.</param>
        public static FileMetaData CreateFileMetaData(global::System.Int32 id, global::System.String metaDataType_Type, global::System.Int64 file_id)
        {
            FileMetaData fileMetaData = new FileMetaData();
            fileMetaData.id = id;
            fileMetaData.MetaDataType_Type = metaDataType_Type;
            fileMetaData.File_id = file_id;
            return fileMetaData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetaDataType_Type
        {
            get
            {
                return _MetaDataType_Type;
            }
            set
            {
                if (_MetaDataType_Type != value)
                {
                    OnMetaDataType_TypeChanging(value);
                    ReportPropertyChanging("MetaDataType_Type");
                    _MetaDataType_Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MetaDataType_Type");
                    OnMetaDataType_TypeChanged();
                }
            }
        }
        private global::System.String _MetaDataType_Type;
        partial void OnMetaDataType_TypeChanging(global::System.String value);
        partial void OnMetaDataType_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 File_id
        {
            get
            {
                return _File_id;
            }
            set
            {
                OnFile_idChanging(value);
                ReportPropertyChanging("File_id");
                _File_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("File_id");
                OnFile_idChanged();
            }
        }
        private global::System.Int64 _File_id;
        partial void OnFile_idChanging(global::System.Int64 value);
        partial void OnFile_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileMetaData_File1", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_FileMetaData_File1", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_FileMetaData_File1", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("SliceOfLifeModel.fk_FileMetaData_File1", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("SliceOfLifeModel.fk_FileMetaData_File1", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileMetaData_MetaDataType1", "MetaDataType")]
        public MetaDataType MetaDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataType>("SliceOfLifeModel.fk_FileMetaData_MetaDataType1", "MetaDataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataType>("SliceOfLifeModel.fk_FileMetaData_MetaDataType1", "MetaDataType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetaDataType> MetaDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaDataType>("SliceOfLifeModel.fk_FileMetaData_MetaDataType1", "MetaDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetaDataType>("SliceOfLifeModel.fk_FileMetaData_MetaDataType1", "MetaDataType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SliceOfLifeModel", Name="MetaDataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaDataType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaDataType object.
        /// </summary>
        /// <param name="type">Initial value of the Type property.</param>
        public static MetaDataType CreateMetaDataType(global::System.String type)
        {
            MetaDataType metaDataType = new MetaDataType();
            metaDataType.Type = type;
            return metaDataType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileMetaData_MetaDataType1", "FileMetaData")]
        public EntityCollection<FileMetaData> FileMetaDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileMetaData>("SliceOfLifeModel.fk_FileMetaData_MetaDataType1", "FileMetaData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileMetaData>("SliceOfLifeModel.fk_FileMetaData_MetaDataType1", "FileMetaData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SliceOfLifeModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="title">Initial value of the title property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.String title)
        {
            Project project = new Project();
            project.id = id;
            project.title = title;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_File_Project1", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("SliceOfLifeModel.fk_File_Project1", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("SliceOfLifeModel.fk_File_Project1", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "ProjectHasUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SliceOfLifeModel.ProjectHasUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SliceOfLifeModel.ProjectHasUser", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SliceOfLifeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="email">Initial value of the email property.</param>
        public static User CreateUser(global::System.String email)
        {
            User user = new User();
            user.email = email;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                if (_email != value)
                {
                    OnemailChanging(value);
                    ReportPropertyChanging("email");
                    _email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("email");
                    OnemailChanged();
                }
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_Change_User1", "Change")]
        public EntityCollection<Change> Changes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Change>("SliceOfLifeModel.fk_Change_User1", "Change");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Change>("SliceOfLifeModel.fk_Change_User1", "Change", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "fk_FileInstance_User1", "FileInstance")]
        public EntityCollection<FileInstance> FileInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileInstance>("SliceOfLifeModel.fk_FileInstance_User1", "FileInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileInstance>("SliceOfLifeModel.fk_FileInstance_User1", "FileInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SliceOfLifeModel", "ProjectHasUser", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("SliceOfLifeModel.ProjectHasUser", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("SliceOfLifeModel.ProjectHasUser", "Project", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
