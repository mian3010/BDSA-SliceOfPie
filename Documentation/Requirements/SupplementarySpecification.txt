Supplementary Specification
Slice of Pie, BDSA




1. Introduction
This document covers our supplementary specification for our Slice of Pie proof of concept. This extends all necessary requirements that are not covered in our use cases. We’ll try to sketch our measurable requirements in a checklist format following the FURPS+ requirements structure.




2. Functionality
Our functional requirements are by and large covered in our Use Cases. 


(Security)
If our timeboxed sprint allows it, user authentication must be required for all usage of program.


3. Usability
The Graphical User Interface should be navigable by all types of computer users (usability test required to really prove this requirement).  




4. Reliability
If there is no internet connection so the main online storage system cannot be used, the user should not have any delay in persisting his data to a local file on the computer. Additionally, the system should synchronize the data when a connection to the online storage has been re-established. The constraint in the storage should only be the internet connection and not the system.


5. Performance
All Use Cases require that the user have no delay or experience no lag while editing document. Hence, each synchronization task must occur ‘simultaneously’ with the user doing his work. 
Measurable requirement to be written down in quality scenario: 
For each navigation in a file system shown in the GUI, a maximum of two seconds response time is allowed (requiring a fast internet connection is present).
In offline mode, a maximum of two seconds is also allowed.


Measurable requirement:
The persistent storage service should be available in 90% of the ITU networks uptime.


6. Supportability
Adaptability
Seeing as the software is meant as a proof of concept, one could argue that the system should be extendable in the sense that it can adapt new file types and new storage types rather easily. Hence, the architecture should reflect easily replaceable components, at least in the persistence layer.


7. +Requirements
Implementation Constraints
The project defines that the main system should be developed in C#. Additionally, the web-related parts of our system can be partly developed in HTML/CSS. There are no constraints on the means of communication between systems.
Development Tools
As a general development requirement, the C# development should be made in Visual Studio 2010 or later. If not Visual Studio, an IDE that can handle .sln files generated by Visual Studio is required to test the system with their integrated testing functions. 
Version Control Requirements
Version Controlling is required to be done by Git and the remote repositories are stored in GitHub. Additionally, a changelog of our documentation is kept by making changes to the final report in LaTeX.